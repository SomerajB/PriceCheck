name: Playwright Tests
on:
  workflow_dispatch:
  schedule: 
    - cron: '0 20 * * *'
  push:
    branches:
      - main

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.43.1-jammy

    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
           ${{ runner.os }}-node-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Install playwright browser
      if: steps.cache.outputs.cache-hit != 'true
      run: npx playwright install chromium
    - name: test
      run: npx playwright test
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/index.html
        retention-days: 1

  Push-reports:
    if: success() || failure()
    needs: [test]

    runs-on: ubuntu-latest

    steps:  
    - name: Checkout GitHub Pages Branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
    - name: Set Git User
      # see: https://github.com/actions/checkout/issues/13#issuecomment-724415212
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'

    - name: Download zipped HTML report
      uses: actions/download-artifact@v4
      with:
        name: playwright_report
        path: .

    - name: Push HTML Report
      timeout-minutes: 3
      # commit report, then try push-rebase-loop until it's able to merge the HTML report to the gh-pages branch
      # this is necessary when this job is running at least twice at the same time (e.g. through two pushes at the same time)
      run: |
        git add .
        git commit -m "add HTML report"

        while true; do
          git pull --rebase
          if [ $? -ne 0 ]; then
            echo "Failed to rebase. Please review manually."
            exit 1
          fi

          git push
          if [ $? -eq 0 ]; then
            echo "Successfully pushed HTML report to repo."
            exit 0
          fi
        done
